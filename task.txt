Моя задача:
- веб-интерфейс для просмотра состояния системы,
- TCP or HTTP порт для входных данных, запроса состояния,
- база данных для хранения данных (транзакции, пул потоков к базе, preparedStatement, …),
- логирование.

Есть два сервера на разных портах portX & portY.
portX – варианты:
1) HTTP сервер, который крутиться на базе embedded Jetty. 
- занимается обслуживаем web-интерфейса. Принимает запросы по HTTP, переадресует запросы на TCP сокет, на порт portY.

2) WebSocket сервер на базе Jetty или Netty.
3) WebSocket сервер, самописный.
- работает с JS частью на фронтенде, которая делает постоянные запросы посредством WebSocket на сервер.
Алгоритм:
- пользователь делает запрос на сервер Apache, где лежит страничка HTML + JS. 
- страничка скачивается пользователю, после этого код JS начинает делает запросы на порт portX по протоколу WebSocket

sensor <--TCP--> ServerSocket(IO/NIO) <-> DatabaseService <-> ConnectionPool <-Transaction-> Database 

бизнес-логика крутиться в отдельных потоках, правила загружаються из файла или как-то по-другому.
бизнес-логика делает параллельно со всеми запросы в базу данных
